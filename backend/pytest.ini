[tool:pytest]
# pytest configuration for PM Co-Pilot backend tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Add backend directory to Python path
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --durations=10
    --cov-report=term-missing 
    --cov-report=html:htmlcov

# Custom markers for test categorization
markers =
    regression: Regression tests for known bugs
    integration: Integration tests that test full workflows
    unit: Unit tests for individual components
    slow: Tests that take longer to run
    critical: Critical tests that must pass for releases
    email_flow: Tests specifically for email retrieval and saving functionality
    health_check: Health check tests that verify API connectivity (use real APIs)
    optimized: Optimized tests using mocks to save tokens and time
    mock_only: Tests that should only run with mocks, never real APIs
    langfuse_standardization: Tests related to Langfuse standardization
    performance: Performance-related tests
    summary: Summary and aggregation tests

# Test timeout (prevent hanging tests)
timeout = 300

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Add specific warnings you want to ignore
    ignore:.*unclosed.*:ResourceWarning