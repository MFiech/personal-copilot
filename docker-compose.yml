version: '3.8'

services:
  pm-copilot-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pm-copilot-backend
    image: pm-copilot/backend:latest
    ports:
      - "5001:5001"
    env_file:
      - .env
    environment:
      - DOCKER_ENV=true
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount source code for development hot-reload
      - ./backend:/app
      # Exclude __pycache__ directories
      - /app/__pycache__
      - /app/*/__pycache__
    restart: unless-stopped
    networks:
      - pm-copilot-network
    # Add health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Labels for better Docker Desktop experience
    labels:
      - "com.docker.compose.project=pm-copilot"
      - "com.docker.compose.service=backend"
      - "description=PM Co-Pilot Backend API Server"

  # MongoDB service
  mongodb:
    image: mongo:7
    container_name: pm-copilot-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=pm_copilot
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - pm-copilot-network
    # Add health check
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Labels for better Docker Desktop experience
    labels:
      - "com.docker.compose.project=pm-copilot"
      - "com.docker.compose.service=mongodb"
      - "description=PM Co-Pilot MongoDB Database"

networks:
  pm-copilot-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
